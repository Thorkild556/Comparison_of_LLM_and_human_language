theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
#ggsave("combined_plot.png", plot = p, width = 20, height = 12)
print(p)
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes by Label",
x = "Word Class",
y = "Value",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 20, height = 12)
print(p)
pos_df$label = as.factor(pos_df$label)
pos_df = select(pos_df, -X.1)
pos_df$label = as.factor(pos_df$label)
#pos_df = select(pos_df, -X.1)
pos_df$label <- factor(pos_df$label, levels = c(0, 1), labels = c("Human", "LLM"))
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes by Label",
x = "Word Class",
y = "Value",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 20, height = 12)
print(p)
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes by Label",
x = "Word Class",
y = "Value",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 20, height = 12)
print(p)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidytext, dplyr)
df = read.csv("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/train_v4_drcat_01.csv")
words = df %>%
unnest_tokens(word, text) %>%
count(label, word, sort = TRUE)
View(words)
knitr::opts_chunk$set(echo = TRUE)
df = read.csv("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/results_df.csv")
library(tidyverse)
library(ggplot2)
df$label = as.factor(df$label)
df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 70)
df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 1)
df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 30)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001)+
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 20, height = 12)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 20, height = 12)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 20, height = 12)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 12, height = 8)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 12, height = 8)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 12, height = 8)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 8, height = 6)
df$label = as.factor(df$label)
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
labs(colour = c("Cylinders", "ass"))
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 8, height = 6)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 30)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 8, height = 6)
pos_df = read.csv("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/POS_df.csv")
pos_df$label = as.factor(pos_df$label)
#pos_df = select(pos_df, -X.1)
pos_df$label <- factor(pos_df$label, levels = c(0, 1), labels = c("Human", "LLM"))
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Percentage",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 20, height = 12)
print(p)
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Proportion",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 20, height = 12)
print(p)
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[2:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Proportion",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 12, height = 8)
print(p)
View(df)
View(pos_df)
pos_df = select(pos_df, c(-X.1, X, INTJ, SYM) )
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[1:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Proportion",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 12, height = 8)
print(p)
pos_df = select(pos_df, c(-X.1, -X, -INTJ, -SYM) )
pos_df = select(pos_df, c(-X.1, -X, -INTJ, -SYM) )
pos_df = detach(pos_df, columns = c("X.1", "X", "INTJ", "SYM"))
pos_df = detach(pos_df, columns = c("X", "INTJ", "SYM"))
pos_df = select(pos_df, c( -X, -INTJ, -SYM) )
#pos_df = detach(pos_df, columns = c("X.1", "X", "INTJ", "SYM"))
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[1:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Proportion",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 12, height = 8)
print(p)
pos_df = read.csv("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/POS_df.csv")
pos_df$label = as.factor(pos_df$label)
pos_df$label <- factor(pos_df$label, levels = c(0, 1), labels = c("Human", "LLM"))
pos_df = select(pos_df, -X)
#pos_df = detach(pos_df, columns = c("X.1", "X", INTJ", "SYM"))
# List of word classes (replace with actual column names if different)
word_classes <- colnames(pos_df)[1:ncol(pos_df)]
# Reshape the data for easier plotting with ggplot2
pos_df_long <- pos_df %>%
pivot_longer(cols = -label, names_to = "word_class", values_to = "value")
# Summarize data for mean
summary_df <- pos_df_long %>%
group_by(label, word_class) %>%
summarize(mean_value = mean(value, na.rm = TRUE), .groups = 'drop')
# Create the combined plot
p <- ggplot(pos_df_long, aes(x = word_class, y = value, fill = factor(label))) +
geom_bar(data = summary_df, aes(x = word_class, y = mean_value),
position = position_dodge(width = 0.75), stat = "identity", alpha = 0.7) +
geom_boxplot(position = position_dodge(width = 0.75), alpha = 0.3, outlier.size = 1) +
labs(title = "Mean and Distribution of Word Classes",
x = "Word Class",
y = "Proportion",
fill = "Label") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_fill_manual(values = c("orange", "cyan")) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0, 0.3)
# Print the plot with adjusted width
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/oOutput.png", plot = p, width = 12, height = 8)
print(p)
knitr::opts_chunk$set(echo = TRUE)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
df = read.csv("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/results_df.csv")
library(tidyverse)
library(ggplot2)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 20)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/flesch_kincaid_grade.png", plot = flesch_kincaid_grade, width = 8, height = 6)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 25)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 25)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 25)
#ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
library(tidyverse)
library(ggplot2)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 25)
#ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/type_token_ration.png", plot = type_token_ration, width = 8, height = 6)
df$label = as.factor(df$label)
df$label <- factor(df$label, levels = c(0, 1), labels = c("Human", "LLM"))
sent_length = df %>% ggplot(aes(x = avg_sentence_length, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Sentence length") +
xlim(0, 70)
type_token_ration = df %>% ggplot(aes(x = type_token_ratio, colour = label)) +
geom_density(alpha = 0.001)+
labs(x = "Type-token Ratio") +
xlim(0, 1)
flesch_kincaid_grade = df %>% ggplot(aes(x = flesch_kincaid_grade, colour = label)) +
geom_density(alpha = 0.001) +
labs(x = "Flesch Kincaid Grade") +
xlim(0, 25)
ggsave("/Users/thorkildkappel/Desktop/4. sem/Soc cult-paper/archive/sent_length.png", plot = sent_length, width = 8, height = 6)
